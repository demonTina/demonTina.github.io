<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>aaa</title>
    <url>/2021/09/22/aaa/</url>
    <content><![CDATA[<p>dsakjd</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/09/22/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Ip-Address</title>
    <url>/2021/09/22/ipnet/</url>
    <content><![CDATA[<h1 id="Ip-Address"><a href="#Ip-Address" class="headerlink" title="Ip-Address"></a>Ip-Address</h1><p>​    这是一篇关于IP地址的文章，本篇文章将阐述IP地址与子网掩码和网关的关系。</p>
<p>​    IP地址是一个由四个8位二进制数字组成，转换成十进制的IP地址如192.168.1.2。其中这四个数字的最大值是255，也就是说IP地址是这样组成的(0-255).(0-255).(0-255).(0-255)。</p>
<p>​    简单的叙述了IP地址，接下来我们来谈一谈子网掩码，子网掩码是来判断两个IP地址是否处于同一网段的重要依据。子网掩码(subnet mask)又叫<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%8E%A9%E7%A0%81/7862514">网络掩码</a>、<a href="https://baike.baidu.com/item/%E5%9C%B0%E5%9D%80%E6%8E%A9%E7%A0%81/8623995">地址掩码</a>、子网络遮罩，它用来指明一个<a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80">IP地址</a>的哪些位标识的是<a href="https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA/455151">主机</a>所在的子网，以及哪些位标识的是主机的位掩码。子网掩码不能单独存在，它必须结合IP地址一起使用。子网掩码只有一个作用，就是将某个IP地址划分成<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80/9765459">网络地址</a>和<a href="https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA%E5%9C%B0%E5%9D%80/9765500">主机地址</a>两部分。子网掩码分成这几种0.0.0.0 、255.0.0.0 、255.255.0.0 、255.255.255.0 、255.255.255.255。其中0.0.0.0和255.255.255.255基本上不会使用。</p>
<pre><code>## 子网掩码与IP地址的关系:
</code></pre>
<p>​    假如子网掩码为255.255.255.0。那么IP地址的前三位就是网络地址，最后一位是主机地址。例如:192.168.1.2，那么192.168.1是网络地址，2就是主机地址。例如：192.168.1.3，同理可得192.168.1是网络地址，3是主机地址。像这种192.168.1.2和192.168.1.3这两IP地址前三位一样的就被成为在同一网段。两台主机是可以相互ping通的。而如果是192.168.1.2和192.168.2.3这样的IP地址，由于前三位不一样那么这两台主机就无法相互ping通。</p>
<p>​    为什么说子网掩码是判断IP地址的重要依据呢？咱们来看看这两个子网掩码的作用，一个子网掩码是255.255.0.0，另一个子网掩码是255.255.255.0。</p>
<p>1.子网掩码是255.255.0.0</p>
<p>一台主机的ip地址是192.168.3.2         另一台主机的ip地址是192.168.2.2</p>
<p>由于子网掩码是255.255.0.0所以他的网络地址实际上是前两位，也就是192.168，而主机地址是3.2，另一个主机地址是2.2。由于网络地址都一样是192.168，所以这两台主机处于同一网段。</p>
<p>2.子网掩码是255.255.255.0</p>
<p>一台主机的ip地址是192.168.3.2         另一台主机的ip地址是192.168.2.2</p>
<p>由于子网掩码是255.255.255.0，所以他的网络地址实际上是前三位，也就是192.168.3 和 192.168.2，而主机地址是2，另一个主机地址是2。由于网络地址不一样，所以这两台主机不处于同一网段。</p>
<p>假如这两台主机的IP地址是这样的,子网掩码是255.255.255.0</p>
<p>一台主机的ip地址是192.168.5.2         另一台主机的ip地址是192.168.5.7</p>
<p>由于子网掩码是255.255.255.0，所以他的网络地址实际上是前三位，也就是192.168.5 和 192.168.5，而主机地址是2，另一个主机地址是7。由于网络地址一样，所以这两台主机处于同一网段。</p>
<p>​    这样你是不是已经理解了子网掩码与网段之间的关系？那么接下来我们来了解一下网段与IP地址数量的关系。</p>
<h2 id="网段与IP地址数量的关系"><a href="#网段与IP地址数量的关系" class="headerlink" title="网段与IP地址数量的关系"></a>网段与IP地址数量的关系</h2><p>如果子网掩码是255.255.255.0</p>
<p>一个网段是192.168.3，那么他有多少个主机地址？</p>
<p>答案是 256个</p>
<p>即192.168.3.0</p>
<p>192.168.3.1</p>
<p>192.168.3.2</p>
<p>…</p>
<p>192.168.3.255</p>
<p>如果子网掩码是255.255.0.0</p>
<p>一个网段是173.12，那么他有多少个主机地址</p>
<p>答案是 2的16次方个</p>
<h1 id="什么是网关"><a href="#什么是网关" class="headerlink" title="什么是网关"></a>什么是网关</h1><p>​    网关(Gateway)又称<a href="https://baike.baidu.com/item/%E7%BD%91%E9%97%B4%E8%BF%9E%E6%8E%A5%E5%99%A8/2943752">网间连接器</a>、<a href="https://baike.baidu.com/item/%E5%8D%8F%E8%AE%AE%E8%BD%AC%E6%8D%A2">协议转换</a>器。网关在网络层以上实现<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%BF%9E/108997">网络互连</a>，是复杂的网络互连设备，仅用于两个高层协议不同的网络互连。网关既可以用于<a href="https://baike.baidu.com/item/%E5%B9%BF%E5%9F%9F%E7%BD%91/422004">广域网</a>互连，也可以用于<a href="https://baike.baidu.com/item/%E5%B1%80%E5%9F%9F%E7%BD%91">局域网</a>互连。 网关是一种充当转换重任的<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/7210959">计算机系统</a>或设备。使用在不同的<a href="https://baike.baidu.com/item/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/3351624">通信协议</a>、数据格式或语言，甚至<a href="https://baike.baidu.com/item/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/8174145">体系结构</a>完全不同的两种系统之间，网关是一个翻译器。与<a href="https://baike.baidu.com/item/%E7%BD%91%E6%A1%A5/99310">网桥</a>只是简单地传达信息不同，网关对收到的信息要重新打包，以适应目的系统的需求。同层–<a href="https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E5%B1%82/4329788">应用层</a>。</p>
<p>通常网关地址是网络地址 + 1</p>
<p>子网掩码是255.255.255.0</p>
<p>网段是192.168.3</p>
<p>那么网关地址一般为192.168.3.1</p>
<p>255.255.0.0是缺省子网掩码，跟网关没多大关系</p>
<h1 id="广播地址"><a href="#广播地址" class="headerlink" title="广播地址"></a>广播地址</h1><p>​    广播地址**(Broadcast Address)是专门用于同时向网络中所有<a href="https://baike.baidu.com/item/%E5%B7%A5%E4%BD%9C%E7%AB%99/217955">工作站</a>进行发送的一个**地址。在使用[TCP/IP 协议](<a href="https://baike.baidu.com/item/TCP%2FIP">https://baike.baidu.com/item/TCP%2FIP</a> 协议/2116790)的网络中，<a href="https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA/455151">主机</a><a href="https://baike.baidu.com/item/%E6%A0%87%E8%AF%86/6396929">标识</a>段host ID 为全1 的IP 地址为广播地址，广播的分组传送给host ID段所涉及的所有<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA/140338">计算机</a>。例如，对于10.1.1.0 （255.0.0.0 ）网段，其直播<a href="https://baike.baidu.com/item/%E5%B9%BF%E6%92%AD/656406">广播</a>地址为10.255.255.255 （255 即为2 进制的11111111 ），当发出一个目的地址为10.255.255.255 的分组（<a href="https://baike.baidu.com/item/%E5%B0%81%E5%8C%85/2017669">封包</a>）时，它将被分发给该<a href="https://baike.baidu.com/item/%E7%BD%91%E6%AE%B5/11026985">网段</a>上的所有计算机。</p>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>maven配置及idea中maven配置</title>
    <url>/2021/09/22/maven/</url>
    <content><![CDATA[<h1 id="Maven安装与基本配置"><a href="#Maven安装与基本配置" class="headerlink" title="Maven安装与基本配置"></a>Maven安装与基本配置</h1><h3 id="一-Maven下载"><a href="#一-Maven下载" class="headerlink" title="一.Maven下载"></a>一.Maven下载</h3><p>Maven的官网地址: <a href="https://maven.apache.org/">https://maven.apache.org/</a></p>
<p><img src="/2021/09/22/maven/image-20211125172005070.png" alt="image-20211125172005070"></p>
<p>在此处下载即可，不过有时候我们想下载老版本的maven，这时候我们就可以这样进入其他版本的下载页面。</p>
<p><img src="/2021/09/22/maven/image-20211125172235805.png" alt="image-20211125172235805"></p>
<p><img src="/2021/09/22/maven/image-20211125172255776.png" alt="image-20211125172255776"></p>
<p>这个的网址是: <a href="https://archive.apache.org/dist/maven/maven-3/">https://archive.apache.org/dist/maven/maven-3/</a></p>
<h3 id="二-Maven的安装"><a href="#二-Maven的安装" class="headerlink" title="二.Maven的安装"></a>二.Maven的安装</h3><p>从官方网站下载的是一个压缩包，我们解压到一个位置后进行环境变量配置。</p>
<p>新建一个环境变量: MAVEN_HOME</p>
<p>MAVEN_HOME的路径是这样的，根据自身而定。</p>
<p>F:\workspace\IDEAfile\apache-maven-3.3.9</p>
<p><img src="/2021/09/22/maven/image-20211125172646136.png" alt="image-20211125172646136"></p>
<p>之后添加到Path变量之中</p>
<p>%MAVEN_HOME%\bin</p>
<p><img src="/2021/09/22/maven/image-20211125172743234.png" alt="image-20211125172743234"></p>
<p>然后通过cmd命令进行确认环境变量是否配置成功:</p>
<p><img src="/2021/09/22/maven/image-20211125172836762.png" alt="image-20211125172836762"></p>
<p>只要是这样的界面就说明你的环境变量配置成功了。</p>
<h3 id="三-setting-xml配置"><a href="#三-setting-xml配置" class="headerlink" title="三.setting.xml配置"></a>三.setting.xml配置</h3><p>这个文件的位置位于apache-maven-3.3.9目录下的conf目录中。</p>
<p><img src="/2021/09/22/maven/image-20211125173155885.png" alt="image-20211125173155885"></p>
<p><img src="/2021/09/22/maven/image-20211125173012928.png" alt="image-20211125173012928"></p>
<p>根据该文件的注释进行更改仓库路径</p>
<p>由于maven的中央仓库在国外所以我们有必要改成国内镜像源。</p>
<p>根据提示进行更改:</p>
<p><img src="/2021/09/22/maven/image-20211125173317386.png" alt="image-20211125173317386"></p>
<p>这里我直接把要添加的代码放在这里，以便拷贝。</p>
<mirror>
        <id>aliyunmaven</id>
        <mirrorOf>*</mirrorOf>
        <name>阿里云公共仓库</name>
        <url>https://maven.aliyun.com/repository/public</url>
    </mirror>

<h3 id="四-IDEA配置maven"><a href="#四-IDEA配置maven" class="headerlink" title="四.IDEA配置maven"></a>四.IDEA配置maven</h3><p>因为IDEA是内置maven的，但是不好更改setting.xml,所以一般不常用.</p>
<p>首先在setting中修改成自己下载的maven版本，以及setting.xml路径。</p>
<p><img src="/2021/09/22/maven/image-20211125173716543.png" alt="image-20211125173716543"></p>
<p>Maven home directory:    这个是要更改的自己下载的maven路径</p>
<p>User settings file:    这个是配置文件，我们需要勾上Override选项覆盖IDEA自带的配置。找到自己第三步中的那个setting.xml的文件路径</p>
<p>Local repository:    本地仓库路径(这个会根据Maven home directory的改变而改变)    #我们不需要更改了</p>
<p><img src="/2021/09/22/maven/image-20211125174053715.png" alt="image-20211125174053715"></p>
<p><strong>新版本的阿里云镜像不再支持http下载，只支持https下载，再次做出修改配置</strong></p>
<p>-Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true</p>
<p>第二个选项找到自己要用的JDK版本即可</p>
<p>在创建Maven工程的时候，每次都要下载一下模板，为了加快工程的创建我们可以使用本地的，这时候我们只需要更改下图的选项</p>
<p><img src="/2021/09/22/maven/image-20211125174409229.png" alt="image-20211125174409229"></p>
<p>VM Options:    -DarchetypeCatalog=internal</p>
<p>我们还需要改一个设置，这个设置跟上述一样即可</p>
<p>这个设置是:</p>
<p><img src="/2021/09/22/maven/image-20211125174641921.png" alt="image-20211125174641921"></p>
<p>这个是创建新工程时的设置。刚才那个时目前工程的设置。两个都改成上述的设置即可。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat configure</title>
    <url>/2021/09/22/tomcat/</url>
    <content><![CDATA[<h1 id="关于tomcat-9环境配置问题"><a href="#关于tomcat-9环境配置问题" class="headerlink" title="关于tomcat 9环境配置问题"></a>关于tomcat 9环境配置问题</h1><p>​    最近刚学javaweb得时候遇到了tomcat的环境配置问题，以下是相关的配置经验。</p>
<p>​    首先我起初是把环境变量配置在了用户变量中，结果造成一直是CATALINA_HOME未定义问题。     解决方案:把环境变量设置到系统变量.</p>
<p>​    第二个问题，缺少JRE_HOME          解决方案:配置JRE_HOME环境变量</p>
<p>​    以下是环境变量的路径:</p>
<p>​    JAVA_HOME        D:\Program Files\Java\jdk1.8.0_201</p>
<p>​    JRE_HOME        D:\Program Files\Java\jdk1.8.0_201\jre</p>
<p>​    CATALINA_HOME        D:\apache-tomcat-9.0.54</p>
<p>​    Path                %JAVA_HOME%\bin;%JRE_HOME%\bin;%CATALINA_HOME%\lib;%CATALINA_HOME%\bin;</p>
]]></content>
  </entry>
</search>
